class Solution {
    public String licenseKeyFormatting(String S, int K) {
        // Assumptions: K > 0
        if (S == null || S.length() == 0) {
            return new String();
        }
        
        int charAmount = 0;
        for (int i = 0; i < S.length(); i++) {
            if (S.charAt(i) != '-') {
                charAmount++;
            }
        }
        int firstLength = charAmount % K;
        StringBuilder sb = new StringBuilder();
        char c;
        int curCount = firstLength == 0 ? 0 : (K - firstLength);
        int curAmount = 0;
        for (int i = 0; curAmount < charAmount; i++) {
            if (curCount != K && S.charAt(i) != '-') {
                if (S.charAt(i) >= 97 && S.charAt(i) <= 122) {
                    c = (char)(S.charAt(i) - 32);
                }
                else {
                    c = S.charAt(i);
                }
                sb.append(c);
                curCount++;
                curAmount++;
            }
            else if (curCount == K) {
                if (S.charAt(i) != '-'){
                    i--;
                }
                sb.append('-');
                curCount = 0;
            }
        }
        return sb.toString();
        
    }
}

// time complexity: O(n)
// space complexity: O(1)