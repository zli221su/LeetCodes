/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        List<Interval> result = new ArrayList<Interval>();
        if (intervals == null || intervals.size() == 0) {
            return result;
        }
        intervals.sort(new Comparator<Interval>(){
            @Override
            public int compare(Interval i1, Interval i2) {
                if (i1.start == i2.start) {
                    return 0;
                }
                return i1.start < i2.start ? -1 : 1;
            }
        });
        Interval first = intervals.remove(0);
        Interval current = new Interval(first.start, first.end);
        for (Interval interval : intervals) {
            if (interval.start <= current.end) {
                current.end = Math.max(current.end, interval.end);
            }
            else {
                result.add(current);
                current = new Interval(interval.start, interval.end);
            }
        }
        result.add(current);
        return result;
    }
}

// time complexity: O(nlogn)
// space complexity: O(1)